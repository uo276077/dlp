#source	"recursive-fibonacci.txt"

	' * Global variables:

' Invocation to the main function
call main
halt

#line	1

 fibonacci :
	' * Parameters:
	' * int i (offset 4)
	' * Local variables:
	enter	0

#line	2
	' * If statement
	push	bp
	pushi	4
	addi
	loadi
	pushi	0
	eqi
	jz		label0
	' * Body of the if branch

#line	3
	' * Return
	pushi	0
	ret		2, 0, 2
	jmp		label1
 label0:
	' * Body of the else branch
 label1:

#line	5
	' * If statement
	push	bp
	pushi	4
	addi
	loadi
	pushi	1
	eqi
	jz		label2
	' * Body of the if branch

#line	6
	' * Return
	pushi	1
	ret		2, 0, 2
	jmp		label3
 label2:
	' * Body of the else branch
 label3:

#line	8
	' * If statement
	push	bp
	pushi	4
	addi
	loadi
	pushi	2
	eqi
	jz		label4
	' * Body of the if branch

#line	9
	' * Return
	pushi	1
	ret		2, 0, 2
	jmp		label5
 label4:
	' * Body of the else branch

#line	11
	' * Return
	push	bp
	pushi	4
	addi
	loadi
	pushi	1
	subi
	call	fibonacci
	push	bp
	pushi	4
	addi
	loadi
	pushi	2
	subi
	call	fibonacci
	addi
	ret		2, 0, 2
 label5:

#line	15

 main :
	' * Parameters:
	' * Local variables:
	' * int i (offset -2)
	enter	2

#line	17
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	18
	' * While
 label6:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	10
	lei
	jz		label7
	' * Body of the while statement

#line	19
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	outi

#line	19
	' * Write
	pushb	58
	outb

#line	19
	' * Write
	pushb	32
	outb

#line	19
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	call	fibonacci
	outi

#line	19
	' * Write
	pushb	10
	outb

#line	20
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp		label6
 label7:
	ret		0, 2, 0
